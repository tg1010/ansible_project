---
  - name: Provision an EC2 Instance
    hosts: local
    connection: local
    gather_facts: False
    tags: provisioning
    
    
    vars:
      instance_type: t2.micro
      security_group: ansible-web 
      image: ami-4836a428 
      keypair: MyKeyPair  
      region: us-west-2
      count: 1

    # Task that will be used to Launch/Create an EC2 Instance
    tasks:

      - name: Create a security group
        local_action: 
          module: ec2_group
          name: "{{ security_group }}"
          description: Security Group for webserver Servers
          region: "{{ region }}"
          rules:
            - proto: tcp
              from_port: 22
              to_port: 22
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 80
              to_port: 80
              cidr_ip: 0.0.0.0/0
            - proto: tcp
              from_port: 443
              to_port: 443
              cidr_ip: 0.0.0.0/0
          rules_egress:
            - proto: all
              cidr_ip: 0.0.0.0/0
        register: basic_firewall

      - name: Launch the new EC2 Instance
        local_action: ec2 
                      group={{ security_group }} 
                      instance_type={{ instance_type}} 
                      image={{ image }} 
                      wait=true
                      region={{ region }}
                      keypair={{ keypair }}
                      count={{count}}
        register: ec2_info

      - name: Add the newly created EC2 instance
        become: True
        become_method: sudo
        local_action: lineinfile 
                      dest="/etc/ansible/hosts" 
                      regexp={{ item.public_ip }} 
                      insertafter="[webserver]" line={{ item.public_ip }}
        with_items: "{{ ec2_info.instances }}"


      - name: Wait for SSH to come up
        local_action: wait_for 
                      host={{ item.public_ip }} 
                      port=22 
                      state=started
        with_items: "{{ ec2_info.instances }}"

      - name: Add tag to Instance(s)
        local_action: ec2_tag resource={{ item.id }} region={{ region }} state=present
        with_items: "{{ ec2_info.instances }}"
        args:
          tags:
            Name: webserver

  - name: install docker
    gather_facts: False
    hosts: webserver
    become: True
    remote_user: ec2-user
    become_method: sudo
    tasks:

      - name: Install docker
        yum:
          name: "{{ item }}"
          update_cache: yes
        with_items:
          - python-setuptools
          - docker

      - name: Start docker
        service:
          name: docker
          state: started

      - name: install pip
        easy_install: name=pip

      - name: Install docker-py to latest
        pip:
          name: "{{ item }}"
          state: latest
        with_items:
          - docker-py
